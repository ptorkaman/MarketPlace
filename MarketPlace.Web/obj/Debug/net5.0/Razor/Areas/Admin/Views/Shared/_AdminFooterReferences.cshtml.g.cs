#pragma checksum "C:\Users\admin\source\repos\MarketPlace\MarketPlace.Web\Areas\Admin\Views\Shared\_AdminFooterReferences.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0188c8a99a19a44c204253ea7199e5cc95a8416b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Shared__AdminFooterReferences), @"mvc.1.0.view", @"/Areas/Admin/Views/Shared/_AdminFooterReferences.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\source\repos\MarketPlace\MarketPlace.Web\Areas\Admin\Views\_ViewImports.cshtml"
using MarketPlace.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\source\repos\MarketPlace\MarketPlace.Web\Areas\Admin\Views\_ViewImports.cshtml"
using MarketPlace.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0188c8a99a19a44c204253ea7199e5cc95a8416b", @"/Areas/Admin/Views/Shared/_AdminFooterReferences.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e8610fbe0cb10ada5d00defb645f03933b741248", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Shared__AdminFooterReferences : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script src=""/admin/js/jquery.min.js""></script>
<script src=""/admin/js/bootstrap.min.js""></script>
<script src=""/admin/js/slimscroll/jquery.slimscroll.min.js""></script>

<!--Beyond Scripts-->
<script src=""/admin/js/skins.min.js""></script>
<script src=""/admin/js/beyond.min.js""></script>


<!--Page Related Scripts-->
<!--Sparkline Charts Needed Scripts-->
<script src=""/admin/js/charts/sparkline/jquery.sparkline.js""></script>
<script src=""/admin/js/charts/sparkline/sparkline-init.js""></script>

<!--Easy Pie Charts Needed Scripts-->
<script src=""/admin/js/charts/easypiechart/jquery.easypiechart.js""></script>
<script src=""/admin/js/charts/easypiechart/easypiechart-init.js""></script>

<!--Flot Charts Needed Scripts-->
<script src=""/admin/js/charts/flot/jquery.flot.js""></script>
<script src=""/admin/js/charts/flot/jquery.flot.resize.js""></script>
<script src=""/admin/js/charts/flot/jquery.flot.pie.js""></script>
<script src=""/admin/js/charts/flot/jquery.flot.tooltip.js""></script>
<script src=""/ad");
            WriteLiteral(@"min/js/charts/flot/jquery.flot.orderBars.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/sweetalert2@7/dist/sweetalert2.all.min.js""></script>
<script src=""/js/notifications.js""></script>
<script src=""/admin/js/custom.js""></script>

<script>

        //Sets The Hidden Chart Width
        $('#dashboard-bandwidth-chart')
            .data('width', $('.box-tabbs')
                .width() - 20);
        //Visitor Sources Pie Chart
        var data = [
            {
                data: [[1, 21]],
                color: '#fb6e52'
            },
            {
                data: [[1, 12]],
                color: '#e75b8d'
            },
            {
                data: [[1, 11]],
                color: '#a0d468'
            },
            {
                data: [[1, 10]],
                color: '#ffce55'
            },
            {
                data: [[1, 46]],
                color: '#5db2ff'
            }
        ];
        var placeholder = $(""#dashboard-pie-c");
            WriteLiteral(@"hart-sources"");
        placeholder.unbind();

        $.plot(placeholder, data, {
            series: {
                pie: {
                    innerRadius: 0.45,
                    show: true,
                    stroke: {
                        width: 4
                    }
                }
            }
        });

        //Visit Chart (Main Chart)
        var data2 = [{
            color: themesecondary,
            label: ""بازدید مستقیم"",
            data: [[3, 2], [4, 5], [5, 4], [6, 11], [7, 12], [8, 11], [9, 8], [10, 14], [11, 12], [12, 16], [13, 9],
            [14, 10], [15, 14], [16, 15], [17, 9]],

            lines: {
                show: true,
                fill: true,
                lineWidth: .1,
                fillColor: {
                    colors: [{
                        opacity: 0
                    }, {
                        opacity: 0.4
                    }]
                }
            },
            points: {
                sh");
            WriteLiteral(@"ow: false
            },
            shadowSize: 0
        },
        {
            color: themeprimary,
            label: ""لینک از سایتها"",
            data: [[3, 10], [4, 13], [5, 12], [6, 16], [7, 19], [8, 19], [9, 24], [10, 19], [11, 18], [12, 21], [13, 17],
            [14, 14], [15, 12], [16, 14], [17, 15]],
            bars: {
                order: 1,
                show: true,
                borderWidth: 0,
                barWidth: 0.4,
                lineWidth: .5,
                fillColor: {
                    colors: [{
                        opacity: 0.4
                    }, {
                        opacity: 1
                    }]
                }
            }
        },
        {
            color: themethirdcolor,
            label: ""موتورهای جستجو"",
            data: [[3, 14], [4, 11], [5, 10], [6, 9], [7, 5], [8, 8], [9, 5], [10, 6], [11, 4], [12, 7], [13, 4],
            [14, 3], [15, 4], [16, 6], [17, 4]],
            lines: {
                sho");
            WriteLiteral(@"w: true,
                fill: false,
                fillColor: {
                    colors: [{
                        opacity: 0.3
                    }, {
                        opacity: 0
                    }]
                }
            },
            points: {
                show: true
            }
        }
        ];
        var options = {
            legend: {
                show: false
            },
            xaxis: {
                tickDecimals: 0,
                color: '#f3f3f3'
            },
            yaxis: {
                min: 0,
                color: '#f3f3f3',
                tickFormatter: function (val, axis) {
                    return """";
                },
            },
            grid: {
                hoverable: true,
                clickable: false,
                borderWidth: 0,
                aboveData: false,
                color: '#fbfbfb'

            },
            tooltip: true,
            tooltipOpts: {
    ");
            WriteLiteral(@"            defaultTheme: false,
                content: "" <b>%x تیر ماه</b> , <b>%s</b> : <span>%y</span>"",
            }
        };
        var placeholder = $(""#dashboard-chart-visits"");
        var plot = $.plot(placeholder, data2, options);

        //Real-Time Chart
        var realTimedata = [],
            realTimedata2 = [],
            totalPoints = 300;

        var getSeriesObj = function () {
            return [
                {
                    data: getRandomData(),
                    lines: {
                        show: true,
                        lineWidth: 1,
                        fill: true,
                        fillColor: {
                            colors: [
                                {
                                    opacity: 0
                                }, {
                                    opacity: 1
                                }
                            ]
                        },
                        steps: fa");
            WriteLiteral(@"lse
                    },
                    shadowSize: 0
                }, {
                    data: getRandomData2(),
                    lines: {
                        lineWidth: 0,
                        fill: true,
                        fillColor: {
                            colors: [
                                {
                                    opacity: .5
                                }, {
                                    opacity: 1
                                }
                            ]
                        },
                        steps: false
                    },
                    shadowSize: 0
                }
            ];
        };
        function getRandomData() {
            if (realTimedata.length > 0)
                realTimedata = realTimedata.slice(1);

            // Do a random walk

            while (realTimedata.length < totalPoints) {

                var prev = realTimedata.length > 0 ? realTimedata[realTim");
            WriteLiteral(@"edata.length - 1] : 50,
                    y = prev + Math.random() * 10 - 5;

                if (y < 0) {
                    y = 0;
                } else if (y > 100) {
                    y = 100;
                }
                realTimedata.push(y);
            }

            // Zip the generated y values with the x values

            var res = [];
            for (var i = 0; i < realTimedata.length; ++i) {
                res.push([i, realTimedata[i]]);
            }

            return res;
        }
        function getRandomData2() {
            if (realTimedata2.length > 0)
                realTimedata2 = realTimedata2.slice(1);

            // Do a random walk

            while (realTimedata2.length < totalPoints) {

                var prev = realTimedata2.length > 0 ? realTimedata[realTimedata2.length] : 50,
                    y = prev - 25;

                if (y < 0) {
                    y = 0;
                } else if (y > 100) {
                    y");
            WriteLiteral(@" = 100;
                }
                realTimedata2.push(y);
            }


            var res = [];
            for (var i = 0; i < realTimedata2.length; ++i) {
                res.push([i, realTimedata2[i]]);
            }

            return res;
        }
        // Set up the control widget
        var updateInterval = 500;
        var plot = $.plot(""#dashboard-chart-realtime"", getSeriesObj(), {
            yaxis: {
                color: '#f3f3f3',
                min: 0,
                max: 100,
                tickFormatter: function (val, axis) {
                    return """";
                }
            },
            xaxis: {
                color: '#f3f3f3',
                min: 0,
                max: 100,
                tickFormatter: function (val, axis) {
                    return """";
                }
            },
            grid: {
                hoverable: true,
                clickable: false,
                borderWidth: 0,
             ");
            WriteLiteral(@"   aboveData: false
            },
            colors: ['#eee', themeprimary],
        });

        function update() {

            plot.setData(getSeriesObj());

            plot.draw();
            setTimeout(update, updateInterval);
        }
        update();


        //Initiates Easy Pie Chart instances in page
        InitiateEasyPieChart.init();

        //Initiates Sparkline Chart instances in page
        InitiateSparklineCharts.init();
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
